<?php

/**
 * @file
 * The Social Geolocation module.
 */

use Drupal\Core\Locale\CountryManager;

/**
 * Convert address to geolocation values.
 *
 * @param string $address
 *   The address that can be given to the Geocoder::geocode method.
 *
 * @return array
 *   An array with a status field and lat/lng values if a geolocation was found.
 */
function _social_geolocation_geocode_address($address) {
  // If there's no address to geocode or we have no geocoder service
  // then there's nothing to do.
  if (empty($address) || !\Drupal::hasService('plugin.manager.geolocation.location')) {
    return [];
  }

  // TODO: To support other geocoders this shouldn't be hardcoded.
  /** @var \Drupal\geolocation\GeocoderInterface $geocoder */
  $geocoder = \Drupal::service('plugin.manager.geolocation.geocoder')->getGeocoder(
    'nominatim',
    []
  );

  $result = $geocoder->geocode($address);

  if (empty($result)) {
    return [];
  }

  return $result['location'];
}

/**
 * Converts an address field value to a string for the Google Maps API.
 *
 * Uses specific entries from an address field to create a Google Maps API
 * compatible string. This avoids erroneous fields like langcode messing up the
 * string.
 *
 * @param array $address
 *   The address field value array.
 *
 * @return string
 *   The string that can be sent to the Google Maps API.
 */
function _social_geolocation_address_to_string(array $address) {
  $countries = CountryManager::getStandardList();

  $country = $address['country_code'];

  // If we have a valid country code we translate it to the full country name.
  // This is needed to ensure geocoding of countries without address works.
  if (isset($countries[$country])) {
    $country = $countries[$country];
  }

  $formatted_address = [
    $country,
    str_replace($address['country_code'] . '-', '', $address['administrative_area']),
    $address['locality'],
    $address['dependent_locality'],
    $address['postal_code'],
    $address['address_line1'],
  ];

  return implode(', ', array_filter($formatted_address));
}
