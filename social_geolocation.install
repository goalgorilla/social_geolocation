<?php

/**
 * @file
 * Install, update and uninstall functions for the social_geolocation module.
 */

use Drupal\user\Entity\Role;
use Drupal\search_api\Entity\Index;

/**
 * Implements hook_install().
 */
function social_geolocation_install() {
  $sandbox = [];

  do {
    social_geolocation_update_8001($sandbox);
  } while (!(!isset($sandbox['#finished']) || $sandbox['#finished'] === 1));
}

/**
 * Reindex content.
 */
function social_geolocation_update_8001(&$sandbox) {
  if (!isset($sandbox['limit'])) {
    $sandbox['indexes'] = [
      'social_all',
      'social_content',
      'social_groups',
      'social_users',
    ];

    $sandbox['current'] = 0;
    $sandbox['first'] = TRUE;
  }

  $index = Index::load($sandbox['indexes'][$sandbox['current']]);
  $tracker = $index->getTrackerInstance();

  if ($sandbox['first']) {
    if (!($sandbox['total'] = $tracker->getTotalItemsCount())) {
      return;
    }

    $index->clear();

    $sandbox['limit'] = $sandbox['total'] > 50 ? 50 : $sandbox['total'];
    $sandbox['first'] = FALSE;
  }

  $index->indexItems($sandbox['limit']);

  $item_progress = $tracker->getIndexedItemsCount() / $sandbox['total'];

  if ($item_progress === 1) {
    $sandbox['current']++;
    $sandbox['first'] = TRUE;
  }

  $index_progress = $sandbox['current'] / count($sandbox['indexes']);

  $sandbox['#finished'] = $item_progress * $index_progress;
}

/**
 * Set defaults for existing customers.
 */
function social_geolocation_update_8002(&$sandbox) {
  $modules = [
    'geocoder',
    'geocoder_address',
    'geocoder_field',
  ];

  \Drupal::service('module_installer')->install($modules);

  // Enable permissions.
  _social_geolocation_set_permissions();

  // Enable default value for config. Because this is only run for existing.
  $this->config('social_geolocation.settings')
    ->set('geolocation_provider', 'google')
    ->save();
}

/**
 * Function to set default permissions.
 */
function _social_geolocation_set_permissions() {
  $roles = Role::loadMultiple();

  /** @var \Drupal\user\Entity\Role $role */
  foreach ($roles as $role) {
    if ($role->id() === 'administrator') {
      continue;
    }

    if ($role->id() === 'sitemanager') {
      user_role_grant_permissions('sitemanager', ['set social geolocation settings']);
    }
  }
}
